// <auto-generated />
using System;
using Hackaton.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Hackaton.Domain.Entities.QuizAnswersEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Correclty");

                    b.Property<DateTime?>("CreateAt");

                    b.Property<string>("Description");

                    b.Property<int>("QuizID");

                    b.Property<DateTime?>("UpdateAt");

                    b.HasKey("Id");

                    b.HasIndex("QuizID");

                    b.ToTable("QuizAnswersEntity");
                });

            modelBuilder.Entity("Hackaton.Domain.Entities.QuizTrailEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateAt");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("TrailID");

                    b.Property<DateTime?>("UpdateAt");

                    b.HasKey("Id");

                    b.HasIndex("TrailID");

                    b.ToTable("QuizTrail");
                });

            modelBuilder.Entity("Hackaton.Domain.Entities.TextTrailEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateAt");

                    b.Property<string>("Paragraphs")
                        .IsRequired();

                    b.Property<int>("TrailID");

                    b.Property<DateTime?>("UpdateAt");

                    b.HasKey("Id");

                    b.HasIndex("TrailID");

                    b.ToTable("TextTrail");
                });

            modelBuilder.Entity("Hackaton.Domain.Entities.TrailEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateAt");

                    b.Property<int>("Reward");

                    b.Property<string>("Title");

                    b.Property<int>("TypeID");

                    b.Property<DateTime?>("UpdateAt");

                    b.HasKey("Id");

                    b.HasIndex("TypeID");

                    b.ToTable("Trails");
                });

            modelBuilder.Entity("Hackaton.Domain.Entities.TrailTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateAt");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<DateTime?>("UpdateAt");

                    b.HasKey("Id");

                    b.ToTable("TrailType");
                });

            modelBuilder.Entity("Hackaton.Domain.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Coins")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("CreateAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<int>("TrailID");

                    b.Property<DateTime?>("UpdateAt");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Hackaton.Domain.Entities.YoutubeTrailEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateAt");

                    b.Property<string>("Paragraphs");

                    b.Property<int>("TrailID");

                    b.Property<DateTime?>("UpdateAt");

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("TrailID");

                    b.ToTable("YoutubeTrail");
                });

            modelBuilder.Entity("Hackaton.Domain.Entities.QuizAnswersEntity", b =>
                {
                    b.HasOne("Hackaton.Domain.Entities.QuizTrailEntity", "Quiz")
                        .WithMany("Answers")
                        .HasForeignKey("QuizID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hackaton.Domain.Entities.QuizTrailEntity", b =>
                {
                    b.HasOne("Hackaton.Domain.Entities.TrailEntity", "Trail")
                        .WithMany("QuizTrailEntity")
                        .HasForeignKey("TrailID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hackaton.Domain.Entities.TextTrailEntity", b =>
                {
                    b.HasOne("Hackaton.Domain.Entities.TrailEntity", "Trail")
                        .WithMany("TextTrailEntity")
                        .HasForeignKey("TrailID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hackaton.Domain.Entities.TrailEntity", b =>
                {
                    b.HasOne("Hackaton.Domain.Entities.TrailTypeEntity", "TrailTypeEntity")
                        .WithMany("TrailEntity")
                        .HasForeignKey("TypeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hackaton.Domain.Entities.YoutubeTrailEntity", b =>
                {
                    b.HasOne("Hackaton.Domain.Entities.TrailEntity", "Trail")
                        .WithMany("YoutubeTrailEntity")
                        .HasForeignKey("TrailID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
